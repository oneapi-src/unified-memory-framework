# Executes benchmarks implemented in this repository
name: Benchmarks

on: workflow_call

permissions:
  contents: read

jobs:
  benchmarks:
    name: Benchmarks
    env:
      BUILD_DIR : "${{github.workspace}}/build/"
      VCPKG_PATH: "${{github.workspace}}/build/vcpkg/packages/hwloc_x64-windows;${{github.workspace}}/build/vcpkg/packages/tbb_x64-windows;${{github.workspace}}/build/vcpkg/packages/jemalloc_x64-windows"
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        include: 
          # Windows doesn't recognize 'CMAKE_BUILD_TYPE', it uses '--config' param in build command to determine the build type
          - os: ubuntu-latest
            extra_build_option: '-DCMAKE_BUILD_TYPE=Release'
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # TODO: 'rm' is a workaround for https://github.com/actions/runner-images/issues/9733
      - name: Install apt packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo rm /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update
          sudo apt-get install -y cmake libhwloc-dev libnuma-dev libjemalloc-dev libtbb-dev

      - name: Initialize vcpkg
        if: matrix.os == 'windows-latest'
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
        with:
          vcpkgGitCommitId: 3dd44b931481d7a8e9ba412621fa810232b66289
          vcpkgDirectory: ${{env.BUILD_DIR}}/vcpkg
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Install vcpkg packages
        if: matrix.os == 'windows-latest'
        run: vcpkg install
        shell: pwsh # Specifies PowerShell as the shell for running the script.

      - name: Configure build
        run: >
          cmake
          -B ${{env.BUILD_DIR}}
          ${{matrix.extra_build_option}}
          -DCMAKE_PREFIX_PATH="${{env.VCPKG_PATH}}"
          -DUMF_BUILD_SHARED_LIBRARY=ON
          -DUMF_BUILD_BENCHMARKS=ON
          -DUMF_BUILD_BENCHMARKS_MT=ON
          -DUMF_BUILD_TESTS=OFF
          -DUMF_FORMAT_CODE_STYLE=OFF
          -DUMF_DEVELOPER_MODE=OFF
          -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
          -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
          -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
          -DUMF_BUILD_LIBUMF_POOL_SCALABLE=ON
          -DUMF_ENABLE_POOL_TRACKING=OFF

      - name: Build UMF on Linux
        if: matrix.os == 'ubuntu-latest'
        run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

      - name: Build UMF on Windows
        if: matrix.os == 'windows-latest'
        run: cmake --build ${{env.BUILD_DIR}} --config Release -j $Env:NUMBER_OF_PROCESSORS

      - name: Run benchmarks
        working-directory: ${{env.BUILD_DIR}}
        run: ctest -V --test-dir benchmark -C Release
