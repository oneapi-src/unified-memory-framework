# Builds project on qemu with custom hmat settings
name: Qemu

on: workflow_call

permissions:
  contents: read

jobs:
  qemu-build:
    name: Qemu
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout UMF
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        path: umf

    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system genisoimage qemu-utils \
          libvirt-clients libvirt-daemon-system libvirt-daemon virtinst bridge-utils

    # Latest distros do not allow global pip installation
    - name: Install Python requirements in venv
      run: |
        python3 -m venv .venv
        . .venv/bin/activate
        echo "$PATH" >> $GITHUB_PATH
        python3 -m pip install -r umf/scripts/qemu/requirements.txt

    - name: Add user to kvm group
      run: sudo usermod -a -G kvm,libvirt $USER

    - name: Run ssh-keygen
      run: ssh-keygen -b 4096 -N '' -f ~/.ssh/id_rsa

    - name: Generate iso with user info
      run: |
        pub_key=$(cat ~/.ssh/id_rsa.pub)

        cat > user-data << EOF
        #cloud-config

        # Add a 'testuser' user to the system with a password
        users:
          - default
          - name: testuser
            gecos: Test User
            primary_group: wheel
            groups: users
            sudo: ALL=(ALL) NOPASSWD:ALL
            lock_passwd: false
            ssh-authorized-keys:
              - $pub_key
            shell: /usr/bin/bash

        # Set local logins
        chpasswd:
          list: |
            root:password
            testuser:password
          expire: False
        EOF

        cat > meta-data << EOF
        instance-id: qemu-test
        local-hostname: qemu-test
        EOF

        sudo -Sk genisoimage -output ubuntu-cloud-init.iso -volid cidata -joliet -rock ./user-data ./meta-data

    - name: Download ubuntu image
      run: wget https://cloud-images.ubuntu.com/releases/lunar/release/ubuntu-23.04-server-cloudimg-amd64.img

    - name: Resize image
      run: qemu-img resize ./ubuntu-23.04-server-cloudimg-amd64.img +4G

    - name: Build UMF in QEMU
      run: |
        umf/scripts/qemu/start_qemu.sh default.xml

        # Copy UMF repository's content into the home dir in QEMU
        rsync -az -e "ssh -p 2222" ${{github.workspace}}/umf/ testuser@127.0.0.1:/home/testuser/
        ssh testuser@127.0.0.1 -p 2222 -t "sudo chown -R testuser:users /home/testuser"

        ssh testuser@127.0.0.1 -p 2222 -t "bash /home/testuser/scripts/qemu/run-build.sh COVERAGE"
        ssh testuser@127.0.0.1 -p 2222 -t "sudo shutdown -h now"

    - name: Run tests in QEMU
      run: |
        for config_file in umf/scripts/qemu/configs/*.xml; do
          config_name=$(basename $config_file)

          while ps -aux | grep qemu-system-x86_64 | grep -q -v grep; do
            echo "Waiting for QEMU to shut down..."
            sleep 5
          done

          echo "\n ### Testing ${config_name} ###"
          umf/scripts/qemu/start_qemu.sh ${config_name}

          ssh testuser@127.0.0.1 -p 2222 -t "bash /home/testuser/scripts/qemu/run-tests.sh COVERAGE ${config_name}"
          scp -r -P 2222 testuser@127.0.0.1:/home/testuser/coverage ./
          ssh testuser@127.0.0.1 -p 2222 -t "sudo shutdown -h now"
        done
        ls -al ./coverage

    - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
      with:
        name: exports-coverage-qemu-all
        path: coverage
