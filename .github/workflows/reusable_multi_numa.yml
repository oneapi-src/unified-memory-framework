# Runs tests on multi-numa machine
name: MultiNuma

on: [workflow_call]

permissions:
  contents: read

env:
  BUILD_DIR : "${{github.workspace}}/build"
  COVERAGE_DIR : "${{github.workspace}}/coverage"
  COVERAGE_NAME : "exports-coverage-multinuma"

jobs:
  multi_numa:
    name: "${{matrix.os}}, ${{matrix.build_type}}, shared=${{matrix.shared_library}}"
    # run only on upstream; forks will not have the HW
    if: github.repository == 'oneapi-src/unified-memory-framework'

    strategy:
      matrix:
        os: [ubuntu-22.04, rhel-9.1]
        build_type: [Debug, Release]
        shared_library: ['ON', 'OFF']
    runs-on:  ["DSS-MULTI-NUMA", "DSS-${{matrix.os}}"]

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Get information about platform
        run: .github/scripts/get_system_info.sh

      - name: Configure build
        run: >
          cmake
          -B ${{github.workspace}}/build
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_CXX_COMPILER=g++
          -DUMF_BUILD_SHARED_LIBRARY=${{matrix.shared_library}}
          -DUMF_BUILD_BENCHMARKS=OFF
          -DUMF_BUILD_TESTS=ON
          -DUMF_DEVELOPER_MODE=ON
          -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
          -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=${{ matrix.os == 'rhel-9.1' && 'OFF' || 'ON' }}
          -DUMF_LINK_HWLOC_STATICALLY=${{ matrix.os == 'ubuntu-22.04' && 'OFF' || 'ON' }}
          -DUMF_TESTS_FAIL_ON_SKIP=ON
          ${{ matrix.build_type == 'Debug' && matrix.os == 'ubuntu-22.04' && '-DUMF_USE_COVERAGE=ON' || '' }}

      - name: Build UMF
        run: cmake --build ${{github.workspace}}/build -j $(nproc)

      - name: Run tests
        working-directory: ${{github.workspace}}/build
        run: ctest --output-on-failure --test-dir test

      - name: Check coverage
        if: ${{ matrix.build_type == 'Debug' && matrix.os == 'ubuntu-22.04' }}
        working-directory: ${{env.BUILD_DIR}}
        run: |
          export COVERAGE_FILE_NAME=${{env.COVERAGE_NAME}}-${{matrix.os}}-shared-${{matrix.shared_library}}
          echo "COVERAGE_FILE_NAME: $COVERAGE_FILE_NAME"
          ../scripts/coverage/coverage_capture.sh $COVERAGE_FILE_NAME
          mkdir -p ${{env.COVERAGE_DIR}}
          mv ./$COVERAGE_FILE_NAME ${{env.COVERAGE_DIR}}

      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ matrix.build_type == 'Debug' && matrix.os == 'ubuntu-22.04' }}
        with:
          name: ${{env.COVERAGE_NAME}}-${{matrix.os}}-shared-${{matrix.shared_library}}
          path: ${{env.COVERAGE_DIR}}
